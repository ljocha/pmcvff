debug:
  enabled: true

rbac:
  enabled: false

hub:
  config:
    GenericOAuthenticator:
      client_id: <<CLIENT_ID>> 
      client_secret: <<CLIENT_SECRET>> 
      token_url: https://login.elixir-czech.org/oidc/token
      userdata_method: GET
      userdata_params:
        state: state
      userdata_url: https://login.elixir-czech.org/oidc/userinfo
      username_key: preferred_username
      login_service: Elixir
      admin_users:
        - xvisnov1
    JupyterHub:
      authenticator_class: oauthenticator.generic.GenericOAuthenticator
  service:
    type: ClusterIP
    annotations: {}
    ports:
      nodePort:
    extraPorts: []
    loadBalancerIP:
  baseUrl: /
  cookieSecret:
  initContainers: []
  fsGid: 1000
  nodeSelector: {}
  tolerations: []
  concurrentSpawnLimit: 64
  consecutiveFailureLimit: 5
  activeServerLimit:
  deploymentStrategy:
    type: Recreate
  db:
    type: sqlite-pvc
    upgrade:
    pvc:
      annotations: {}
      selector: {}
      accessModes:
        - ReadWriteOnce
      storage: 1Gi
      subPath:
      storageClassName: csi-ceph-rbd-du
    url:
    password:
  labels: {}
  annotations: {}
  command: []
  args: []
  extraConfig: {}
  extraFiles: {}
  extraEnv:
    OAUTH2_AUTHORIZE_URL: https://login.elixir-czech.org/oidc/authorize 
    OAUTH2_TOKEN_URL: https://login.elixir-czech.org/oidc/token 
    OAUTH2_CALLBACK_URL: https://pmcvff-correction.cerit-sc.cz/hub/oauth_callback 
  extraContainers: []
  extraVolumes: []
  extraVolumeMounts: []
  image:
    name: jupyterhub/k8s-hub
    tag: "1.1.3"
    pullPolicy:
    pullSecrets: []
  resources: {}
  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
  lifecycle: {}
  #loadRoles: {}
  services: {}
  pdb:
    enabled: false
    maxUnavailable:
    minAvailable: 1
  allowNamedServers: false
  namedServerLimitPerUser:
  authenticatePrometheus:
  redirectToServer:
  shutdownOnLogout:
  templatePaths: []
  templateVars: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 300
    periodSeconds: 10
    failureThreshold: 30
    timeoutSeconds: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 2
    failureThreshold: 1000
    timeoutSeconds: 1
  existingSecret:
  serviceAccount:
    annotations: {}
  extraPodSpec: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    external-dns.alpha.kubernetes.io/target: "k8s-public-a.cerit-sc.cz"
    nginx.ingress.kubernetes.io/proxy-body-size: 16m
  hosts:
    - pmcvff-correction.cerit-sc.cz
  tls:
    - hosts:
        - pmcvff-correction.cerit-sc.cz
      secretName: pmcvff-correction-cerit-sc-cz

singleuser:
  podNameTemplate:
  extraTolerations: []
  nodeSelector: {}
  extraNodeAffinity:
    required: []
    preferred: []
  extraPodAffinity:
    required: []
    preferred: []
  extraPodAntiAffinity:
    required: []
    preferred: []
  networkTools:
    image:
      name: jupyterhub/k8s-network-tools
      tag: "1.1.3"
      pullPolicy:
      pullSecrets: []
  cloudMetadata:
    blockWithIptables: false
    ip: 169.254.169.254
  networkPolicy:
    enabled: false 
    ingress: []
    egress:
      - to:
          - ipBlock:
              cidr: 0.0.0.0/0
              except:
                - 169.254.169.254/32
    interNamespaceAccessLabels: ignore
    allowedIngressPorts: []
  events: true
  extraAnnotations: {}
  extraLabels:
    hub.jupyter.org/network-access-hub: "true"
  extraFiles: {}
  extraEnv: {}
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "sh"
          - "-c"
          - >
            cp /tmp/base/pipelineJupyter.ipynb /home/jovyan;
            cp /tmp/base/tleapin.txt /home/jovyan;
            /opt/init.sh;
            python -m ipykernel install --user
  initContainers: []
  extraContainers: []
  uid: 1000
  fsGid: 100
  serviceAccountName: singleuser
  storage:
    type: dynamic
    extraLabels: {}
    extraVolumes: []
    #- name: kube-config-volume
    #   secret:
    #     secretName: kube-config-secret
    # extraVolumeMounts: []
    extraVolumeMounts: []
    #  - name: kube-config-volume
    #    mountPath: /mnt/secret/config
    static:
      pvcName:
      subPath: "{username}"
    capacity: 10Gi
    homeMountPath: /home/jovyan
    dynamic:
      storageClass: nfs-csi
      pvcNameTemplate: claim-{username}{servername}
      volumeNameTemplate: volume-{username}{servername}
      # storageAccessModes: [ReadWriteOnce]
      storageAccessModes: [ReadWriteMany]
  image:
    name: spectraes/jmagichub
    tag: "alpha11"
    pullPolicy:
    pullSecrets: []
  startTimeout: 300
  cpu:
    limit: 2
    guarantee: 1
  memory:
    limit: 1G
    guarantee: 1G
  extraResource:
    limits: {}
    guarantees: {}
  cmd: jupyterhub-singleuser
  defaultUrl: "/lab"
  extraPodConfig: {}
  profileList: []

cull:
  enabled: false

scheduling:
  userScheduler:
    enabled: false
    replicas: 2
    logLevel: 4
    plugins:
      score:
        disabled:
          - name: SelectorSpread
          - name: TaintToleration
          - name: PodTopologySpread
          - name: NodeResourcesBalancedAllocation
          - name: NodeResourcesLeastAllocated
          # Disable plugins to be allowed to enable them again with a different
          # weight and avoid an error.
          - name: NodePreferAvoidPods
          - name: NodeAffinity
          - name: InterPodAffinity
          - name: ImageLocality
        enabled:
          - name: NodePreferAvoidPods
            weight: 161051
          - name: NodeAffinity
            weight: 14631
          - name: InterPodAffinity
            weight: 1331
          - name: NodeResourcesMostAllocated
            weight: 121
          - name: ImageLocality
            weight: 11
    containerSecurityContext:
      runAsUser: 65534 # nobody user
      runAsGroup: 65534 # nobody group
      allowPrivilegeEscalation: false
    image:
      name: k8s.gcr.io/kube-scheduler
      tag: v1.19.13 # ref: https://github.com/kubernetes/website/blob/main/content/en/releases/patch-releases.md
      pullPolicy:
      pullSecrets: []
    nodeSelector: {}
    tolerations: []
    pdb:
      enabled: false
      maxUnavailable: 1
      minAvailable:
    resources: {}
    serviceAccount:
      annotations: {}
    extraPodSpec: {}
  podPriority:
    enabled: false
    globalDefault: false
    defaultPriority: 0
    userPlaceholderPriority: -10
  userPlaceholder:
    enabled: false
    image:
      name: k8s.gcr.io/pause
      tag: "3.5"
      pullPolicy:
      pullSecrets: []
    replicas: 0
    containerSecurityContext:
      runAsUser: 65534 # nobody user
      runAsGroup: 65534 # nobody group
      allowPrivilegeEscalation: false
    resources: {}
  corePods:
    tolerations:
      - key: hub.jupyter.org/dedicated
        operator: Equal
        value: core
        effect: NoSchedule
      - key: hub.jupyter.org_dedicated
        operator: Equal
        value: core
        effect: NoSchedule
    nodeAffinity:
      matchNodePurpose: prefer
  userPods:
    tolerations:
      - key: hub.jupyter.org/dedicated
        operator: Equal
        value: user
        effect: NoSchedule
      - key: hub.jupyter.org_dedicated
        operator: Equal
        value: user
        effect: NoSchedule
    nodeAffinity:
      matchNodePurpose: prefer
